#!/bin/bash

#
# Copyright (c) 2009-2018 MontaVista Software, LLC.  All rights reserved.
#
# This file is licensed under the terms of the GNU General Public License 
# version 2. This program is licensed "as is" without any warranty of any 
# kind, whether express or implied.

if [ -n "$BASH_SOURCE" ]; then
    THIS_SCRIPT=$BASH_SOURCE
elif [ -n "$ZSH_NAME" ]; then
    THIS_SCRIPT=$0
else
    THIS_SCRIPT="$(pwd)/fetch-sources"
fi
PROJECT_LOCATION=$(readlink -f $(dirname $(dirname $THIS_SCRIPT)))
DEFAULT_SOURCE_TARGET=default-sdk
DOWNLOAD_DIR=$PROJECT_LOCATION/.source-mirror
BUILD_DIR=$PROJECT_LOCATION/.source-download
MIRROR_DIR=""

while [ "x$1" != "x" ]; do
      case "$1" in
              --build-target)
                shift
                if [ "x$1" == "x" ]; then
                      echo "No build target specified with --build-target" 1>&2
                      exit 1
                fi
                DEFAULT_SOURCE_TARGET="$1"
                shift
                ;;
              --download-dir)
                shift
                if [ "x$1" == "x" ]; then
                   echo "No build target specified with --download-dir" 1>&2
                   exit 1
                fi
                DOWNLOAD_DIR=$1
                DOWNLOAD_DIR=$(readlink -f $DOWNLOAD_DIR)
                shift
                ;;
              --build-dir)
                shift
                if [ "x$1" == "x" ]; then
                   echo "No build directory specified with --build-dir" 1>&2
                   exit 1
                fi
                BUILD_DIR=$1
                BUILD_DIR=$(readlink -f $DOWNLOAD_DIR)
                shift
                ;;
              --mirror-dir)
                shift
                if [ "x$1" == "x" ]; then
                   echo "No mirror directory specified with --mirror-dir" 1>&2
                   exit 1
                fi
                MIRROR_DIR=$1
                MIRROR_DIR=$(readlink -f $MIRROR_DIR)
                shift
                ;;
              *)
                echo "Unknown option: '$1'" 1>&2
                exit 1
                ;;
      esac
done
echo $DOWNLOAD_DIR > $PROJECT_LOCATION/.download-dir

export DL_DIR=$DOWNLOAD_DIR
export BB_ENV_EXTRAWHITE="DL_DIR"
source $PROJECT_LOCATION/setup.sh $BUILD_DIR
bitbake -k -c fetchall $DEFAULT_SOURCE_TARGET 

if [ "x$MIRROR_DIR" != "x" ] ; then
   echo -n "copying downloaded files to mirror(this can take some time)...."
   mkdir -p $MIRROR_DIR/source-mirror
   find  $DL_DIR -maxdepth 1 -type f | grep -v \.done$ | grep -v linux-mvista | while read FILE; do
     if [ ! -e $MIRROR_DIR/source-mirror/$(basename $FILE) -o -n "$(basename $FILE | grep ^git2)" ] ; then
        cp $FILE $MIRROR_DIR/source-mirror
     fi
   done
   echo "complete."
fi
